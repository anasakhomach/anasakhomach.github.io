<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://anasakhomach.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://anasakhomach.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-08-21T21:01:55+00:00</updated><id>https://anasakhomach.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Portfolio, Day 3: The Devil is in the Details</title><link href="https://anasakhomach.github.io/blog/2025/portfolio-day-three-the-last-mile/" rel="alternate" type="text/html" title="Portfolio, Day 3: The Devil is in the Details"/><published>2025-08-20T16:00:00+00:00</published><updated>2025-08-20T16:00:00+00:00</updated><id>https://anasakhomach.github.io/blog/2025/portfolio-day-three-the-last-mile</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2025/portfolio-day-three-the-last-mile/"><![CDATA[<h3 id="the-mission-achieving-total-consistency">The Mission: Achieving Total Consistency</h3> <p>Days one and two were about broad strokes: setting up the framework, writing the content, and fixing the major bugs. Day three was about something more difficult: the last mile. It’s the point where you stop building and start polishing. It’s the obsessive, detail-oriented work that most people skip, and it’s the only thing that matters.</p> <p>The new mission was to overhaul my CV page. The data was a mess of placeholders, and the layout had inconsistencies that, to a data detective’s eye, were as jarring as a fraudulent transaction.</p> <h3 id="data-integrity-the-first-priority">Data Integrity: The First Priority</h3> <p>The first task was a data overhaul inside the <code class="language-plaintext highlighter-rouge">resume.json</code> file. This is the central database for my professional history, and its integrity is non-negotiable.</p> <ul> <li><strong>Work History:</strong> I translated every role from my career into the precise JSON structure, focusing on quantifiable achievements.</li> <li><strong>Education &amp; Certifications:</strong> I updated my academic and professional credentials, ensuring every date was correct and every issuer was named. For my university degree, I made a strategic choice to highlight its official recognition in Germany—a key piece of data for my target audience.</li> </ul> <p>This wasn’t just data entry; it was about ensuring the source of truth was clean, accurate, and structured.</p> <h3 id="the-final-boss-a-single-inconsistent-section">The Final Boss: A Single Inconsistent Section</h3> <p>With the data clean, a glaring visual bug remained. The “Certificates” section was rendered as a grid of cards, while “Work” and “Education” were clean, professional lists. It was a design flaw that broke the flow of the entire page. It had to be fixed.</p> <p>What followed was a frustrating but invaluable lesson in front-end debugging.</p> <ol> <li> <p><strong>The Wrong Path:</strong> My first instinct was to fight fire with fire. I wrote custom CSS to override the grid layout. The result? The CSS was either too weak and was ignored, or too strong and broke the entire page. It was a classic case of treating the symptom, not the disease.</p> </li> <li> <p><strong>The Root Cause Analysis:</strong> A true analyst doesn’t just fix a problem; they understand its origin. I dove into the theme’s source code and found the real culprit: the HTML blueprint itself (<code class="language-plaintext highlighter-rouge">_includes/resume/certificates.liquid</code>). It was fundamentally different from the <code class="language-plaintext highlighter-rouge">work.liquid</code> and <code class="language-plaintext highlighter-rouge">education.liquid</code> blueprints.</p> </li> <li> <p><strong>Re-engineering the Solution:</strong> The only way to guarantee perfect consistency was to use the same blueprint. I meticulously re-engineered the <code class="language-plaintext highlighter-rouge">certificates.liquid</code> file, using the <code class="language-plaintext highlighter-rouge">education.liquid</code> file as a reference. I went line-by-line, matching every HTML tag, every CSS class, and every variable.</p> </li> </ol> <p>The result is a CV page where every section is now visually harmonious. It was a brutal, detail-obsessed fight for a few pixels of alignment, and it was worth it. This is what it means to be a data professional: an obsessive, relentless pursuit of getting it right, down to the last detail.</p>]]></content><author><name></name></author><category term="technical-deep-dive"/><category term="portfolio-build"/><category term="front-end-dev"/><category term="css"/><category term="debugging"/><summary type="html"><![CDATA[The final 10% of any project is what separates the amateur from the professional. A deep dive into the obsessive pursuit of consistency.]]></summary></entry><entry><title type="html">Portfolio, Day 2: The Debugging Chronicles</title><link href="https://anasakhomach.github.io/blog/2025/portfolio-day-two-the-debugging-chronicles/" rel="alternate" type="text/html" title="Portfolio, Day 2: The Debugging Chronicles"/><published>2025-08-18T20:00:00+00:00</published><updated>2025-08-18T20:00:00+00:00</updated><id>https://anasakhomach.github.io/blog/2025/portfolio-day-two-the-debugging-chronicles</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2025/portfolio-day-two-the-debugging-chronicles/"><![CDATA[<h3 id="the-strategy-ruthless-optimization">The Strategy: Ruthless Optimization</h3> <p>Day one was about laying the foundation. Day two? It was about sharpening the blade. I looked at my homepage not as a biography, but as the opening argument in a case to a very busy jury: potential employers.</p> <p>The verdict was swift. The “News” and “Publications” sections were circumstantial evidence at best—distractions. In their place, I needed to present Exhibit A, my proof of work. I decided to surgically remove the noise and engineer a new section front and center: <strong>“Featured Projects.”</strong> This wasn’t just a design choice; it was a strategic decision to control the narrative and immediately answer the only question that matters: “Can you do the job?”</p> <h3 id="the-crime-scene-the-case-of-the-empty-section">The Crime Scene: The Case of the Empty Section</h3> <p>I coded the new section. I configured it. I deployed it. And… nothing. An empty space where my proudest work should have been. This is where a data detective’s real work begins. The system wasn’t throwing errors; it was giving me the silent treatment. The most frustrating kind of bug.</p> <p>My investigation led me down a rabbit hole of dead-end hypotheses:</p> <ol> <li> <p><strong>The Wrong Sorting Key:</strong> My first assumption was a simple logic error. I was trying to sort projects by <code class="language-plaintext highlighter-rouge">date</code>, but the theme was hardcoded to use a number called <code class="language-plaintext highlighter-rouge">importance</code>. A quick change, a redeploy, and… still nothing.</p> </li> <li> <p><strong>The Data Type Mismatch:</strong> I dug deeper into the code. The sorting logic was looking for projects where <code class="language-plaintext highlighter-rouge">importance</code> was equal to the <em>text</em> <code class="language-plaintext highlighter-rouge">"1"</code>, but my project files correctly defined it as the <em>number</em> <code class="language-plaintext highlighter-rouge">1</code>. To a computer, that’s like comparing a photograph of a key to the key itself. They are not the same. I corrected the data type. I redeployed. Still nothing.</p> </li> </ol> <h3 id="the-breakthrough-finding-the-real-culprit">The Breakthrough: Finding the Real Culprit</h3> <p>At this point, I knew I wasn’t just fixing a typo. I was hunting a fundamental flaw in the system’s logic. The final breakthrough came when I realized the theme was using two entirely different visual blueprints for projects: a vertical card for the main projects page, and a horizontal one for the homepage.</p> <p>The sorting file I was fixing was correctly gathering the data, but it was handing that data off to the wrong blueprint. It was like a perfectly executed police raid on the wrong address.</p> <p>With the true culprit identified, the fix was decisive. I rewrote the sorting logic from the ground up to be more robust and, critically, to use the correct <strong>horizontal card blueprint</strong>. I redeployed.</p> <p>Success.</p> <h3 id="what-this-teaches-a-data-analyst">What This Teaches a Data Analyst</h3> <p>This entire ordeal—the strategic pivot, the frustrating bugs, the forensic deep-dive into the code—is a perfect metaphor for the daily life of a data analyst. You start with a clear goal, you hit a wall of confusing or missing data, and you must apply logic, discipline, and relentless curiosity to find the truth. The answer is never on the surface. You have to be willing to get your hands dirty in the source code of the problem.</p>]]></content><author><name></name></author><category term="technical-deep-dive"/><category term="portfolio-build"/><category term="debugging"/><category term="jekyll"/><category term="liquid"/><summary type="html"><![CDATA[Sometimes the most valuable data is in the error logs. A recap of Day 2, where strategy met a series of stubborn bugs.]]></summary></entry><entry><title type="html">My First Steps in Building a Data Analyst Portfolio</title><link href="https://anasakhomach.github.io/blog/2025/building-my-data-analyst-portfolio/" rel="alternate" type="text/html" title="My First Steps in Building a Data Analyst Portfolio"/><published>2025-08-17T21:10:00+00:00</published><updated>2025-08-17T21:10:00+00:00</updated><id>https://anasakhomach.github.io/blog/2025/building-my-data-analyst-portfolio</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2025/building-my-data-analyst-portfolio/"><![CDATA[<swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <hr/> <h3 id="introduction-giving-my-data-a-voice">Introduction: Giving My Data a Voice</h3> <p>A resume is a police sketch of my skills – it gives you the basic features, but it’s flat, lifeless. It tells you <em>that</em> I can wrangle a dataset into submission, but it doesn’t show you the exhilarating treasure hunt that got me there. I decided I needed more than a sketch; I needed a living, breathing crime board where I could pin up my findings, connect the dots, and show the world the stories my data is screaming to tell. This portfolio is that crime board. It’s where the outliers and the “why” behind the numbers get to take center stage.</p> <h3 id="the-tool-i-chose-al-folio-my-digital-detectives-office">The Tool I Chose: al-folio, My Digital Detective’s Office</h3> <p>Every data detective needs a workspace. Mine is a Jekyll theme called <strong>al-folio</strong>. I didn’t pick it because it was flashy; I picked it because it gets out of the way. It’s the clean, uncluttered desk that lets the evidence shine. No distracting bells and whistles, no bloated code to sift through. It’s brutally efficient and lets me focus on what actually matters: torturing the data until it confesses its secrets. It’s less of a website theme and more of a precision instrument, and it was the perfect choice for an analyst who believes in substance over style.</p> <h3 id="the-configuration-process-hacking-the-mainframe">The Configuration Process: Hacking the Mainframe</h3> <p>Getting this portfolio off the ground felt like getting root access to a new system. It was a thrilling dive into the backend, pulling levers and flipping switches to make it my own.</p> <ul> <li><strong>The Master Control (<code class="language-plaintext highlighter-rouge">_config.yml</code>):</strong> The first stop was the main configuration file. Think of it as the site’s central nervous system. I didn’t just fill in the blanks; I calibrated it, tuning the parameters to control everything from my site’s title to its core plugins.</li> <li><strong>The Mission Statement (<code class="language-plaintext highlighter-rouge">_pages/about.md</code>):</strong> My “About” page isn’t a biography; it’s a manifesto. It’s the “why” behind my what. It’s where I lay out my philosophy on data and give fair warning about my obsessive curiosity.</li> <li><strong>The Rap Sheet (<code class="language-plaintext highlighter-rouge">_data/cv.yml</code>):</strong> Forget the boring resume format. I chose the YAML file to build my CV because it’s structured, clean, and reads like a well-documented script. It’s my professional history, refactored for clarity.</li> <li><strong>The Case Files (<code class="language-plaintext highlighter-rouge">_projects</code>):</strong> This is the heart of the operation. Each project gets its own file in the <code class="language-plaintext highlighter-rouge">_projects</code> directory. These aren’t just descriptions; they’re the case files of my investigations, detailing the messy beginnings, the “aha!” moments, and the final, actionable insights.</li> </ul> <h3 id="why-this-matters-for-a-data-analyst-more-than-just-code">Why This Matters for a Data Analyst: More Than Just Code</h3> <p>Let’s be clear: building this wasn’t just a weekend project. It was a masterclass in the very skills I use every day to hunt down insights.</p> <ul> <li><strong>Technical Chops:</strong> You can’t build this without getting your hands dirty with Git, GitHub, and Markdown. This is the stuff that separates the amateurs from the pros. It’s about version control that saves your skin when a query goes wrong and documentation that actually makes sense six months from now.</li> <li><strong>Translating Geek to English:</strong> My job is to make complex data understandable to people who don’t have time to care about the standard deviation. Writing these posts, explaining my projects – it’s the ultimate practice in turning a statistically significant result into a story that makes a stakeholder sit up and listen.</li> <li><strong>The Proof is in the Portfolio:</strong> A resume says “I can build predictive models.” My portfolio <em>shows</em> you the model, lets you play with the inputs, and demonstrates its scary-good accuracy. It’s a live-fire exercise, not a theoretical claim.</li> </ul> <h3 id="conclusion-the-hunt-is-on">Conclusion: The Hunt is On</h3> <p>The lab is built, the tools are sharpened, and the first few case files are up on the board. But this is just the beginning. This portfolio is a living entity, a place where I’ll be documenting every new data mystery I unravel. It’s where I’ll get to be unapologetically obsessive about the patterns others miss.</p> <p>I’ve spent countless hours wrestling with datasets just because I had to know what they were trying to tell me. Now, I have a place to share the answers.</p> <p>Warning: I might get a little too excited explaining why your data trends the way it does. Ready to stop guessing and start knowing?</p>]]></content><author><name></name></author><category term="career-development"/><category term="portfolio"/><category term="data-analysis"/><category term="jekyll"/><summary type="html"><![CDATA[A look into the tools, configurations, and the value of creating a personal portfolio for a data analyst.]]></summary></entry><entry><title type="html">a post with plotly.js</title><link href="https://anasakhomach.github.io/blog/2025/plotly/" rel="alternate" type="text/html" title="a post with plotly.js"/><published>2025-03-26T14:24:00+00:00</published><updated>2025-03-26T14:24:00+00:00</updated><id>https://anasakhomach.github.io/blog/2025/plotly</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2025/plotly/"><![CDATA[<p>This is an example post with some <a href="https://plotly.com/javascript/">plotly</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">plotly
</span><span class="sb">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "type": "scatter"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [16, 5, 11, 9],
      "type": "scatter"
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-plotly">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "type": "scatter"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [16, 5, 11, 9],
      "type": "scatter"
    }
  ]
}
</code></pre> <p>Also another example chart.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">plotly
</span><span class="sb">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "mode": "markers"
    },
    {
      "x": [2, 3, 4, 5],
      "y": [16, 5, 11, 9],
      "mode": "lines"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [12, 9, 15, 12],
      "mode": "lines+markers"
    }
  ],
  "layout": {
    "title": {
      "text": "Line and Scatter Plot"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>This is how it looks like:</p> <pre><code class="language-plotly">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "mode": "markers"
    },
    {
      "x": [2, 3, 4, 5],
      "y": [16, 5, 11, 9],
      "mode": "lines"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [12, 9, 15, 12],
      "mode": "lines+markers"
    }
  ],
  "layout": {
    "title": {
      "text": "Line and Scatter Plot"
    }
  }
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included plotly.js code could look like]]></summary></entry><entry><title type="html">a post with image galleries</title><link href="https://anasakhomach.github.io/blog/2024/photo-gallery/" rel="alternate" type="text/html" title="a post with image galleries"/><published>2024-12-04T01:59:00+00:00</published><updated>2024-12-04T01:59:00+00:00</updated><id>https://anasakhomach.github.io/blog/2024/photo-gallery</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2024/photo-gallery/"><![CDATA[<p>The images in this post are all zoomable, arranged into different mini-galleries using different libraries.</p> <h2 id="lightbox2"><a href="https://lokeshdhakar.com/projects/lightbox2/">Lightbox2</a></h2> <p><a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/></a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/></a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/></a></p> <hr/> <h2 id="photoswipe"><a href="https://photoswipe.com/">PhotoSwipe</a></h2> <div class="pswp-gallery pswp-gallery--single-column" id="gallery--getting-started"> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg" data-pswp-width="1669" data-pswp-height="2500" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg" alt=""/> </a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-2500.jpg" data-pswp-width="1875" data-pswp-height="2500" data-cropped="true" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-200.jpg" alt=""/> </a> <a href="https://unsplash.com" data-pswp-src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg" data-pswp-width="2500" data-pswp-height="1666" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg" alt=""/> </a> <div> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-2500.jpg" data-pswp-width="2500" data-pswp-height="1667" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-200.jpg" alt=""/> </a> </div> </div> <hr/> <h2 id="spotlight-js"><a href="https://nextapps-de.github.io/spotlight/">Spotlight JS</a></h2> <div class="spotlight-group"> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/> </a> </div> <div class="spotlight-group"> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/4/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/4/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-200.jpg"/> </a> </div> <hr/> <h2 id="venobox"><a href="https://veno.es/venobox/">Venobox</a></h2> <p><a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/></a> <a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/></a> <a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/></a></p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what included image galleries could look like]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://anasakhomach.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://anasakhomach.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[<p>May 14, 2024 We’re introducing a series of updates across the Gemini family of models, including the new 1.5 Flash, our lightweight model for speed and efficiency, and Project Astra, our vision for the future of AI assistants. In December, we launched our first natively multimodal model Gemini 1.0 in three sizes: Ultra, Pro and Nano. Just a few months later we released 1.5 Pro, with enhanced performance and a breakthrough long context window of 1 million tokens.Developers and enterprise customers have been putting 1.5 Pro to use in incredible ways and finding its long context window, multimodal reasoning capabilities and impressive overall performance incredibly useful.We know from user feedback that some applications need lower latency and a lower cost to serve. This inspired us to keep innovating, so today, we’re introducing Gemini 1.5 Flash: a model that’s lighter-weight than 1.5 Pro, and designed to be fast and efficient to serve at scale.Both 1.5 Pro and 1.5 Flash are available in public preview with a 1 million token context window in Google AI Studio and Vertex AI. And now, 1.5 Pro is also available with a 2 million token context window via waitlist to developers using the API and to Google Cloud customers.We’re also introducing updates across the Gemini family of models, announcing our next generation of open models, Gemma 2, and sharing progress on the future of AI assistants, with Project Astra.Context lengths of leading foundation models compared with Gemini 1.5’s 2 million token capability1.5 Flash is the newest addition to the Gemini model family and the fastest Gemini model served in the API. It’s optimized for high-volume, high-frequency tasks at scale, is more cost-efficient to serve and features our breakthrough long context window.While it’s a lighter weight model than 1.5 Pro, it’s highly capable of multimodal reasoning across vast amounts of information and delivers impressive quality for its size.The new Gemini 1.5 Flash model is optimized for speed and efficiency, is highly capable of multimodal reasoning and features our breakthrough long context window.1.5 Flash excels at summarization, chat applications, image and video captioning, data extraction from long documents and tables, and more. This is because it’s been trained by 1.5 Pro through a process called “distillation,” where the most essential knowledge and skills from a larger model are transferred to a smaller, more efficient model.Read more about 1.5 Flash in our updated Gemini 1.5 technical report, on the Gemini technology page, and learn about 1.5 Flash’s availability and pricing.Over the last few months, we’ve significantly improved 1.5 Pro, our best model for general performance across a wide range of tasks.Beyond extending its context window to 2 million tokens, we’ve enhanced its code generation, logical reasoning and planning, multi-turn conversation, and audio and image understanding through data and algorithmic advances. We see strong improvements on public and internal benchmarks for each of these tasks.1.5 Pro can now follow increasingly complex and nuanced instructions, including ones that specify product-level behavior involving role, format and style. We’ve improved control over the model’s responses for specific use cases, like crafting the persona and response style of a chat agent or automating workflows through multiple function calls. And we’ve enabled users to steer model behavior by setting system instructions.We added audio understanding in the Gemini API and Google AI Studio, so 1.5 Pro can now reason across image and audio for videos uploaded in Google AI Studio. And we’re now integrating 1.5 Pro into Google products, including Gemini Advanced and in Workspace apps.Read more about 1.5 Pro in our updated Gemini 1.5 technical report and on the Gemini technology page.Gemini Nano is expanding beyond text-only inputs to include images as well. Starting with Pixel, applications using Gemini Nano with Multimodality will be able to understand the world the way people do — not just through text, but also through sight, sound and spoken language.Read more about Gemini 1.0 Nano on Android.Today, we’re also sharing a series of updates to Gemma, our family of open models built from the same research and technology used to create the Gemini models.We’re announcing Gemma 2, our next generation of open models for responsible AI innovation. Gemma 2 has a new architecture designed for breakthrough performance and efficiency, and will be available in new sizes.The Gemma family is also expanding with PaliGemma, our first vision-language model inspired by PaLI-3. And we’ve upgraded our Responsible Generative AI Toolkit with LLM Comparator for evaluating the quality of model responses.Read more on the Developer blog.As part of Google DeepMind’s mission to build AI responsibly to benefit humanity, we’ve always wanted to develop universal AI agents that can be helpful in everyday life. That’s why today, we’re sharing our progress in building the future of AI assistants with Project Astra (advanced seeing and talking responsive agent).To be truly useful, an agent needs to understand and respond to the complex and dynamic world just like people do — and take in and remember what it sees and hears to understand context and take action. It also needs to be proactive, teachable and personal, so users can talk to it naturally and without lag or delay.While we’ve made incredible progress developing AI systems that can understand multimodal information, getting response time down to something conversational is a difficult engineering challenge. Over the past few years, we’ve been working to improve how our models perceive, reason and converse to make the pace and quality of interaction feel more natural.Building on Gemini, we’ve developed prototype agents that can process information faster by continuously encoding video frames, combining the video and speech input into a timeline of events, and caching this information for efficient recall.By leveraging our leading speech models, we also enhanced how they sound, giving the agents a wider range of intonations. These agents can better understand the context they’re being used in, and respond quickly, in conversation.With technology like this, it’s easy to envision a future where people could have an expert AI assistant by their side, through a phone or glasses. And some of these capabilities are coming to Google products, like the Gemini app and web experience, later this year.We’ve made incredible progress so far with our family of Gemini models, and we’re always striving to advance the state-of-the-art even further. By investing in a relentless production line of innovation, we’re able to explore new ideas at the frontier, while also unlocking the possibility of new and exciting Gemini use cases.Learn more about Gemini and its capabilities. Your information will be used in accordance with Google’s privacy policy.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      Done. Just one step more.
    
      Check your inbox to confirm your subscription.
    You are already subscribed to our newsletter.
    You can also subscribe with a
    different email address
    
    .
    
  Let’s stay in touch. Get the latest news from Google in your inbox.
          Follow Us
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://anasakhomach.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://anasakhomach.github.io/blog/2024/tabs</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="78c7e9af-d943-4794-8564-936836fb46fc" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="78c7e9af-d943-4794-8564-936836fb46fc" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="ec2af150-9f78-45ae-93ba-86b75ec402ad" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="ec2af150-9f78-45ae-93ba-86b75ec402ad" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="eba09233-c4d5-4df3-834e-81661622d5e0" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="eba09233-c4d5-4df3-834e-81661622d5e0" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with typograms</title><link href="https://anasakhomach.github.io/blog/2024/typograms/" rel="alternate" type="text/html" title="a post with typograms"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://anasakhomach.github.io/blog/2024/typograms</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2024/typograms/"><![CDATA[<p>This is an example post with some <a href="https://github.com/google/typograms/">typograms</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">+----+
|    |---&gt; My first diagram!
+----+</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-typograms">+----+
|    |---&gt; My first diagram!
+----+
</code></pre> <p>Another example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.</span>
<span class="p">```</span>
</code></pre></div></div> <p>which generates:</p> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <p>For more examples, check out the <a href="https://google.github.io/typograms/#examples">typograms documentation</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included typograms code could look like]]></summary></entry><entry><title type="html">a post that can be cited</title><link href="https://anasakhomach.github.io/blog/2024/post-citation/" rel="alternate" type="text/html" title="a post that can be cited"/><published>2024-04-28T15:06:00+00:00</published><updated>2024-04-28T15:06:00+00:00</updated><id>https://anasakhomach.github.io/blog/2024/post-citation</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2024/post-citation/"><![CDATA[<p>This is an example post that can be cited. The content of the post ends here, while the citation information is automatically provided below. The only thing needed is for you to set the <code class="language-plaintext highlighter-rouge">citation</code> key in the front matter to <code class="language-plaintext highlighter-rouge">true</code>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[this is what a post that can be cited looks like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://anasakhomach.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://anasakhomach.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://anasakhomach.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry></feed>